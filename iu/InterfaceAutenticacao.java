package iu;

import fachada.Gerenciador;
import negocio.entidade.Usuario;
import java.util.Scanner;

/**
 * M√≥dulo da interface de usu√°rio respons√°vel por todas as opera√ß√µes de autentica√ß√£o,
 * como login, cadastro e logout.
 */
public final class InterfaceAutenticacao {
    
    private final Scanner scanner;
    private final Gerenciador gerenciador;
    
    public InterfaceAutenticacao(Scanner scanner, Gerenciador gerenciador) {
        this.scanner = scanner;
        this.gerenciador = gerenciador;
    }
    
    /**
     * Exibe o menu de login e cadastro. Utiliza um loop 'while' para robustez,
     * evitando recurs√£o desnecess√°ria.
     *
     * @return {@code true} se a aplica√ß√£o deve continuar, {@code false} se o usu√°rio escolheu sair.
     */
    public boolean exibirTelaLogin() {
        while (true) { // Usar um loop √© mais seguro que recurs√£o para menus.
            
            System.out.println("===================================");
            System.out.println("  BEM-VINDO AO L√öMINA - TO-DO-LIST ");
            System.out.println("===================================");
            System.out.println("1 -> Fazer Login");
            System.out.println("2 -> Cadastrar novo usu√°rio");
            System.out.println("0 -> Sair do Sistema");
            System.out.print("Escolha uma op√ß√£o: ");
            
            int opcao = UtilitariosInterface.lerInteiro(scanner);
            scanner.nextLine(); // Consumir a quebra de linha restante
            
            switch (opcao) {
                case 1:
                    realizarLogin();
                    return true; // Retorna para o loop principal, que ir√° detetar o login.
                case 2:
                    realizarCadastro();
                    return true; // Retorna para o loop principal, mostrando a tela de login novamente.
                case 0:
                    return false; // Sinaliza para o loop principal que o sistema deve encerrar.
                default:
                    System.out.println("\n‚ùå Op√ß√£o inv√°lida. Por favor, tente novamente.");
                    UtilitariosInterface.pressioneEnterParaContinuar(scanner);
                    // O loop continuar√°, exibindo o menu novamente.
            }
        }
    }
    
    /**
     * Conduz o processo de login do utilizador.
     */
    private void realizarLogin() {
        
        System.out.println("--- LOGIN DE ACESSO AO SISTEMA ---");
        System.out.print("üìß Email: ");
        String email = scanner.nextLine().trim();
        System.out.print("üîí Senha: ");
        String senha = scanner.nextLine();
        
        if (gerenciador.fazerLogin(email, senha)) {
            System.out.println("\n‚úÖ Login realizado com sucesso! Bem-vindo(a).");
        } else {
            System.out.println("\n‚ùå Falha no login. Email ou senha incorretos.");
        }
        UtilitariosInterface.pressioneEnterParaContinuar(scanner);
    }
    
    /**
     * Conduz o processo de cadastro de um novo utilizador.
     */
    private void realizarCadastro() {
        
        System.out.println("--- CADASTRO DE NOVO USU√ÅRIO ---");
        System.out.print("üë§ Nome Completo: ");
        String nome = scanner.nextLine().trim();
        System.out.print("üìß Email: ");
        String email = scanner.nextLine().trim();
        System.out.print("üîí Senha: ");
        String senha = scanner.nextLine();
        
        try {
            gerenciador.cadastrarUsuario(nome, email, senha);
            System.out.println("\n‚úÖ Usu√°rio cadastrado com sucesso! Agora, por favor, fa√ßa o login.");
        } catch (Exception e) {
            // Exibe uma mensagem mais amig√°vel para o utilizador.
            System.out.println("\n‚ùå Erro ao cadastrar usu√°rio: " + e.getMessage());
        }
        UtilitariosInterface.pressioneEnterParaContinuar(scanner);
    }
    
    /**
     * Realiza o processo de logout do utilizador atual.
     */
    public void realizarLogout() {
        
        System.out.println("--- LOGOUT ---");
        System.out.println("üö™ A sua sess√£o est√° sendo encerrada...");
        
        gerenciador.fazerLogout();
        
        System.out.println("\n‚úÖ Sess√£o encerrada com sucesso!");
        UtilitariosInterface.pressioneEnterParaContinuar(scanner);
    }
    
    // Os m√©todos abaixo s√£o "convenience methods", que apenas delegam a chamada
    // para a fachada. Podem ser √∫teis para simplificar o acesso em outras partes da UI.

    /**
     * Verifica se h√° um utilizador autenticado no sistema.
     * @return {@code true} se um utilizador estiver logado.
     */
    public boolean estaLogado() {
        return gerenciador.estaLogado();
    }
    
    /**
     * Obt√©m a inst√¢ncia do utilizador atualmente autenticado.
     * @return O objeto {@code Usuario} logado, ou {@code null} se ningu√©m estiver logado.
     */
    public Usuario getUsuarioLogado() {
        return gerenciador.getUsuarioLogado();
    }
}